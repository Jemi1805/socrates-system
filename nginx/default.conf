server {
    listen 80;
    server_name localhost;
    root /var/www/html/public;
    index index.php index.html;

    # Configuración para API de Laravel - PRIMERA PRIORIDAD
    location /api {
        try_files $uri $uri/ /index.php?$query_string;
        
        # Headers CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With, Accept, Origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Manejar preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With, Accept, Origin' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Procesar con PHP si no se encuentra el archivo
        location ~ ^/api/.*$ {
            try_files $uri /index.php?$query_string;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param HTTP_AUTHORIZATION $http_authorization;
            fastcgi_pass_header Authorization;
        }
    }

    # Configuración para archivos PHP de Laravel
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTP_AUTHORIZATION $http_authorization;
        fastcgi_pass_header Authorization;
    }

    # Configuración para Angular (Frontend) - ÚLTIMA PRIORIDAD
    location / {
        # Primero intentar servir desde Laravel public
        try_files $uri $uri/ @angular;
    }
    
    # Fallback para Angular
    location @angular {
        root /var/www/html/frontend/dist/browser;
        try_files $uri $uri/ /index.html;
        
        # Headers para desarrollo
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    # Configuración para archivos estáticos de Angular
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /var/www/html/frontend/dist/browser;
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Seguridad: ocultar archivos sensibles
    location ~ /\. {
        deny all;
    }

    location ~ /(composer\.json|composer\.lock|\.env) {
        deny all;
    }
}